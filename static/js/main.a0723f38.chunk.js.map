{"version":3,"sources":["react-auth0-spa.js","components/NavBar.js","utils/history.js","components/PrivateRoute.js","components/Auction.js","components/BidModal.js","pages/AuctionsPage.js","components/PictureUpload.js","pages/CreateAuctionPage.js","components/LoadingSpinner.js","App.js","serviceWorker.js","stores/AuthStore.js","stores/OverlayStore.js","stores/AuctionStore.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","authStore","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getIdTokenClaims","tokenClaims","token","__raw","setClaims","setToken","initAuth0","loginWithPopup","params","console","error","Provider","value","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","useStyles","makeStyles","navbar","background","padding","marginBottom","display","width","boxSizing","header","flexBasis","loginLogoutContainer","justifyContent","alignItems","button","color","inject","auth0","classes","className","style","fontSize","Button","onClick","createBrowserHistory","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","root","media","height","bidButton","borderWidth","cardActions","detailsContainer","details","paddingTop","paddingBottom","textAlign","Label","styled","p","Value","span","Auction","auction","onBid","bidState","amount","highestBid","pictureUrl","Card","CardActionArea","CardHeader","avatar","Avatar","aria-label","seller","toUpperCase","CardMedia","image","CardContent","date","endingAt","renderer","hours","minutes","seconds","CardActions","disabled","variant","theme","modal","outline","paper","backgroundColor","palette","spacing","borderRadius","observer","auctionStore","onCancel","biddingOn","Modal","aria-labelledby","aria-describedby","open","onClose","setBiddingOn","closeAfterTransition","Fade","in","noValidate","autoComplete","FormControl","fullWidth","margin","InputLabel","htmlFor","Input","id","bidAmount","onChange","e","setBidAmount","target","type","startAdornment","InputAdornment","position","float","placeBid","auctionsContainer","flexWrap","maxWidth","auctionCard","containerWidth","flexShrink","fabContainer","bottom","right","createAuctionButton","routerHistory","fetchAuctions","setInterval","process","auctions","length","map","email","bidder","key","renderAuctions","Fab","push","container","border","cursor","preview","PictureUpload","input","onPictureSelected","base64","setBase64","handleFileChange","file","files","reader","FileReader","readAsDataURL","onload","result","ref","ButtonBase","click","src","alt","form","pictureUpload","marginTop","setTitle","createAuction","Container","fixed","TextField","label","placeholder","spinnerContainer","zIndex","LoadingSpinner","displayValue","log","CircularProgress","overlayStore","displaySpinner","exact","AuctionsPage","CreateAuctionPage","Boolean","hostname","match","this","claims","observable","action","status","axios","Axios","create","baseURL","get","headers","Authorization","AuthStore","data","alert","forEach","OverlayStore","setLoadingSpinner","patch","pictureBase64","post","createAuctionResult","auctionId","ReactDOM","AuctionStore","domain","client_id","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a0723f38.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  authStore,\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        const tokenClaims = await auth0FromHook.getIdTokenClaims();\n        const token = tokenClaims.__raw;\n        authStore.setClaims(user);\n        authStore.setToken(token);\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  \n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { inject } from 'mobx-react';\nimport { makeStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  navbar: {\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n    padding: 14,\n    marginBottom: 24,\n    display: 'flex',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n  header: {\n    flexBasis: '50%',\n    display: 'flex'\n  },\n  loginLogoutContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flexBasis: '50%',\n  },\n  button: {\n    color: 'white',\n  },\n})\n\nconst NavBar = ({ authStore }) => {\n  const auth0 = useAuth0();\n  const { loginWithRedirect, logout } = auth0;\n  const isAuthenticated = authStore.token;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.navbar}>\n      <div className={classes.header}>\n        <h1 style={{ fontSize: 14, color: 'white' }}>THE AUCTION HOUSE</h1>\n      </div>\n      <div className={classes.loginLogoutContainer}>\n        {!isAuthenticated && (\n          <Button\n            className={classes.button}\n            onClick={() => loginWithRedirect({})}\n          >\n           Sign in\n          </Button>\n        )}\n\n        {isAuthenticated && (\n          <Button\n            className={classes.button}\n            onClick={() => logout({})}\n          >\n            Sign out\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default inject(['authStore'])(NavBar);","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Countdown from \"react-countdown\";\nimport { Grid, CardHeader, Avatar } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  media: {\n    height: 280,\n  },\n  bidButton: {\n    width: '70%',\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n    borderWidth: 0,\n    color: 'white',\n  },\n  cardActions: {\n   width: '100%',\n   display: 'flex',\n   justifyContent: 'center',\n   padding: 12,\n  },\n  detailsContainer: {\n    display: 'flex',\n    padding: 0,\n  },\n  details: {\n    display: 'flex',\n    flexBasis: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 18,\n    paddingBottom: 10,\n    textAlign: 'center',\n  },\n});\n\nconst Label = styled.p`\n  font-size: 12px;\n  font-weight: bold;\n  color: #919191;\n`;\n\nconst Value = styled.span`\n  font-size: 14px;\n`;\n\nconst Auction = ({ auction, onBid, bidState }) => {\n  const classes = useStyles();\n  const amount = auction.highestBid.amount;\n\n  const pictureUrl = auction.pictureUrl ? auction.pictureUrl : 'placeholder.png';\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {auction.seller[0].toUpperCase()}\n            </Avatar>\n          }\n          title={auction.title}\n        />\n        <CardMedia\n          className={classes.media}\n          image={pictureUrl}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent className={classes.detailsContainer}>\n          <div className={classes.details}>\n              <div>\n                <Value>{amount === 0 ? 'No bids' : `$${amount}`}</Value>\n                <Label>HIGHEST BID</Label>\n              </div>\n          </div>\n          <div className={classes.details}>\n            <div>\n              <Countdown\n                date={auction.endingAt}\n                renderer={({ hours, minutes, seconds }) => (\n                  <Value>\n                    {hours} hours {minutes} mins {seconds} secs\n                  </Value>\n                )}\n              />\n              <Label>TIME REMAINING</Label>\n            </div>\n          </div>\n          {/* <Grid container spacing={3} style={{ width: '100%', margin: 'auto' }}>\n            <Grid item xs={4} style={{ textAlign: 'center' }}>\n              <Value>{amount === 0 ? 'No bids' : `$${amount}`}</Value>\n              <Label>HIGHEST BID</Label>\n            </Grid>\n            <Grid item xs={8} style={{ textAlign: 'center' }}>\n              <p>\n                <Countdown\n                  date={auction.endingAt}\n                  renderer={({ hours, minutes, seconds }) => (\n                    <Value>\n                     {hours} hours {minutes} mins {seconds} secs\n                    </Value>\n                  )}\n                />\n              </p>\n              <Label>TIME REMAINING</Label>\n            </Grid>\n          </Grid> */}\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <div className={classes.cardActions}>\n          { (bidState === 'OWN_AUCTION' || bidState === 'HIGHEST_BIDDER') && (\n            <Button\n              disabled={true}\n              onClick={() => onBid()}\n            >\n              {bidState === 'OWN_AUCTION' ? 'This is your auction' : 'You are the highest bidder'}\n            </Button>\n          )}\n\n          { bidState === 'CAN_BID' && (\n            <Button\n              variant=\"outlined\"\n              className={classes.bidButton}\n              onClick={() => onBid()}\n            >\n              Bid now!\n            </Button>\n          )}\n\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Auction;\n","import React, { useState } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport {\n  Modal,\n  makeStyles,\n  Fade,\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: 0,\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n    borderRadius: 10,\n  },\n}));\n\nconst BidModal = ({ auctionStore, onCancel }) => {\n  const classes = useStyles();\n  const auction = auctionStore.biddingOn;\n\n  if (!auction) {\n    return null;\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={!!auction}\n      onClose={() => auctionStore.setBiddingOn(null)}\n      closeAfterTransition\n    >\n      <Fade in={!!auction}>\n        <div className={classes.paper}>\n          <h2>Bid on \"{auction.title}\"</h2>\n          <form noValidate autoComplete=\"off\">\n            <FormControl fullWidth className={classes.margin}>\n              <InputLabel htmlFor=\"standard-adornment-amount\">\n                Bid Amount\n              </InputLabel>\n              <Input\n                id=\"standard-adornment-amount\"\n                value={auctionStore.bidAmount}\n                onChange={(e) => auctionStore.setBidAmount(e.target.value)}\n                type=\"number\"\n                startAdornment={\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                }\n              />\n            </FormControl>\n            <br/><br/>\n            <div>\n              <Button\n                style={{ float: 'right' }}\n                onClick={() => auctionStore.placeBid()}\n              >\n                  Place Bid\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default inject([\"auctionStore\"])(observer(BidModal));\n","import React, { useEffect } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Auction from \"../components/Auction\";\nimport BidModal from \"../components/BidModal\";\nimport { Fab, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst containerWidth = 1000;\nconst cardPadding = 14;\nconst cardWidth = (containerWidth / 2) - (cardPadding * 2); \n\nconst useStyles = makeStyles({\n  auctionsContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: containerWidth,\n    margin: 'auto',\n    '@media (max-width: 900px)' : {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n  },\n  auctionCard: {\n    flexBasis: cardWidth,\n    flexShrink: 0,\n    padding: cardPadding,\n  },\n  fabContainer: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n  },\n  createAuctionButton: {\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n  },\n});\n\nconst AuctionsPage = (props) => {\n  const { auctionStore, authStore, routerHistory } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    (async () => {\n      await auctionStore.fetchAuctions();\n      setInterval(() => {\n        if (routerHistory.location.pathname === '/auctions' || routerHistory.location.pathname === '/') {\n          auctionStore.fetchAuctions();\n        }\n      }, process.env.REACT_APP_REFRESH_RATE * 1000);\n    })();\n  }, [auctionStore, routerHistory]);\n\n  const renderAuctions = () => {\n    const { auctions } = auctionStore;\n\n    if (!auctions.length) {\n      return (\n        <div style={{ textAlign: 'center', width: '100%' }}>\n          <h4>No auctions available. Create one?</h4>\n        </div>\n      );\n    }\n\n    return auctions.map((auction) => {\n      let bidState = 'CAN_BID';\n\n      if (auction.seller === authStore.email) {\n        bidState = 'OWN_AUCTION';\n      }\n\n      if (auction.highestBid.bidder === authStore.email) {\n        bidState = 'HIGHEST_BIDDER';\n      }\n\n      return (\n        <div key={auction.id} className={classes.auctionCard}>\n          <Auction\n            auction={auction}\n            bidState={bidState}\n            onBid={() => auctionStore.setBiddingOn(auction)}\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={classes.auctionsContainer}>\n      <BidModal />\n\n      {renderAuctions()}\n      \n      <div className={classes.fabContainer}>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.createAuctionButton}\n          onClick={() => routerHistory.push('/create')}\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n};\n\nexport default inject(\"auctionStore\", \"authStore\", \"routerHistory\")(observer(AuctionsPage));\n","import React, { Fragment, useState } from 'react';\nimport { makeStyles, ButtonBase } from '@material-ui/core';\nimport PictureIcon from '@material-ui/icons/BurstMode';\n\nconst useStyles = makeStyles({\n  container: {\n    width: 300,\n    height: 100,\n    border: '2px dashed #a1a1a1',\n    borderRadius: 5,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    cursor: 'copy',\n  },\n  preview: {\n    width: 300,\n    borderRadius: 5,\n  }\n});\n\nconst PictureUpload = ({ onPictureSelected }) => {\n  const [base64, setBase64] = useState(null);\n  const classes = useStyles();\n  let input;\n\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setBase64(reader.result);\n      onPictureSelected(reader.result);\n    };\n  };\n\n  return (\n    <Fragment>\n      <input\n        style={{ display: 'none' }}\n        ref={ref => input = ref}\n        type=\"file\"\n        onChange={handleFileChange}\n      />\n      \n      {\n        !base64 && (\n          <ButtonBase onClick={() => input.click()}>\n            <div className={classes.container}>\n              <PictureIcon color=\"disabled\" />\n            </div>\n          </ButtonBase>\n        )\n      }\n\n      {\n        base64 && (\n          <img className={classes.preview} src={base64} alt=\"Auction\" />\n        )\n      }\n    </Fragment>\n  );\n};\n\nexport default PictureUpload;","import React, { useState } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport {\n  Container,\n  FormControl,\n  Button,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport PictureUpload from '../components/PictureUpload';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    maxWidth: 400,\n  },\n  pictureUpload: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n}));\n\nconst CreateAuctionPage = ({ auctionStore, routerHistory }) => {\n  const [title, setTitle] = useState(\"\");\n  const [base64, setBase64] = useState(null);\n  const classes = useStyles();\n\n  const createAuction = async (title) => {\n    await auctionStore.createAuction(title, base64);\n    routerHistory.push(\"/auctions\");\n  };\n\n  return (\n    <Container width={200} fixed>\n      <h1>Create an Auction</h1>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <FormControl fullWidth>\n          <TextField\n            label=\"Auction Title\"\n            id=\"standard-adornment-amount\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Example: Lemonade from the '60s\"\n            type=\"string\"\n            variant=\"outlined\"\n          />\n        </FormControl>\n        <div className={classes.pictureUpload}>\n          <PictureUpload onPictureSelected={base64 => setBase64(base64)} />\n        </div>\n        <div>\n          <Button\n            onClick={() => createAuction(title)}\n            disabled={!title.length || !base64}\n          >\n            Create auction\n          </Button>\n        </div>\n      </form>\n    </Container>\n  );\n};\n\nexport default inject(\n  \"auctionStore\",\n  \"authStore\",\n  \"routerHistory\"\n)(observer(CreateAuctionPage));\n","import React from 'react';\nimport { makeStyles, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(({ props }) => ({\n  spinnerContainer: {\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'rgba(0, 0, 0, 0.2)',\n    position: 'fixed',\n    zIndex: 999,\n  },\n}));\n\nconst LoadingSpinner = ({ display }) => {\n  const classes = useStyles();\n\n  const displayValue = !!display ? 'flex' : 'none';\n  console.log('dValue', displayValue, '/ display', display);\n\n  return (\n    <div className={classes.spinnerContainer} style={{ display: displayValue }}>\n      <CircularProgress color='secondary' />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport { Prompt, Redirect } from 'react-router-dom';\n\nimport { Router, Switch } from \"react-router-dom\";\nimport history from \"./utils/history\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AuctionsPage from './pages/AuctionsPage';\nimport CreateAuctionPage from './pages/CreateAuctionPage';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { inject, observer } from 'mobx-react';\n\nconst App = (props) => {\n  const { overlayStore } = props;\n\n  return (\n    <div className=\"App\">\n      <LoadingSpinner display={overlayStore.displaySpinner} />\n      <Router history={history}>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          <PrivateRoute path=\"/\" exact component={AuctionsPage} />\n          <PrivateRoute path=\"/auctions\" component={AuctionsPage} />\n          <PrivateRoute path=\"/create\" component={CreateAuctionPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default inject('overlayStore')(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { observable, action } from 'mobx';\n\nclass AuthStore {\n  @observable token = null;\n  @observable claims;\n  @observable email;\n\n  @action\n  setToken(token) {\n    this.token = token;\n    console.log('Token set', token);\n  }\n\n  @action\n  setClaims(claims) {\n    this.claims = claims;\n    this.email = claims.email;\n  }\n}\n\nexport default new AuthStore();","import { observable, action } from 'mobx';\n\nclass OverlayStore {\n  @observable displaySpinner = false;\n\n  @action setLoadingSpinner(status) {\n    this.displaySpinner = status;\n  }\n}\n\nexport default new OverlayStore();","import { action, observable } from 'mobx';\nimport Axios from 'axios';\nimport AuthStore from './AuthStore';\nimport OverlayStore from './OverlayStore';\n\nconst axios = Axios.create({\n  baseURL: process.env.REACT_APP_AUCTIONS_ENDPOINT,\n});\n\nclass AuctionStore {\n  @observable auctions = [];\n  @observable biddingOn = null;\n  @observable bidAmount = 0;\n\n  @action\n  async fetchAuctions() {\n    try {\n      const result = await axios.get('/auctions?status=OPEN', {\n        headers: {\n          Authorization: AuthStore.token,\n        }\n      });\n\n      this.auctions = result.data;\n    } catch (error) {\n      alert('Could not fetch auctions! Check console for more details.');\n      console.error(error);\n    }\n\n    if (this.biddingOn) {\n      this.auctions.forEach(auction => {\n        if (auction.id === this.biddingOn.id) {\n          this.bidAmount = auction.highestBid.amount + 1;\n        }\n      });\n    }\n  }\n\n  @action\n  setBiddingOn(auction) {\n    this.biddingOn = auction;\n\n    if (auction) {\n      this.bidAmount = auction.highestBid.amount + 1;\n    } else {\n      this.bidAmount = 0;\n    }\n  }\n\n  @action\n  setBidAmount(amount) {\n    this.bidAmount = amount;\n  }\n\n  @action\n  async placeBid() {\n    const id = this.biddingOn.id;\n    const amount = this.bidAmount;\n\n    OverlayStore.setLoadingSpinner(true);\n\n    try {\n      await axios.patch(`/auction/${id}/bid`, { amount }, {\n        headers: {\n          Authorization: AuthStore.token,\n        }\n      });\n    } catch (error) {\n      alert('Could not place bid! Check console for more details.');\n      console.error(error);\n    }\n\n    this.fetchAuctions();\n    this.biddingOn = null;\n    this.bidAmount = 0;\n    OverlayStore.setLoadingSpinner(false);\n  }\n\n  async createAuction(title, pictureBase64) {\n    let auctionId;\n    OverlayStore.setLoadingSpinner(true);\n\n    try {\n      const createAuctionResult = await axios.post('/auction', { title }, {\n        headers: {\n          Authorization: AuthStore.token,\n        }\n      });\n      \n      const auction = createAuctionResult.data;\n      auctionId = auction.id;\n      \n      await axios.patch(`/auction/${auctionId}/picture`, pictureBase64, {\n        headers: {\n          Authorization: AuthStore.token,\n        },\n      });\n    } catch (error) {\n      alert('Could not create auction! Check console for more details.');\n      console.error(error);\n    }\n\n    OverlayStore.setLoadingSpinner(false);\n  }\n}\n\nexport default new AuctionStore();","import React from \"react\";\nimport { Provider } from \"mobx-react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AuctionStore from \"./stores/AuctionStore\";\nimport AuthStore from \"./stores/AuthStore\";\nimport OverlayStore from \"./stores/OverlayStore\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport history from \"./utils/history\";\nimport \"./style.scss\";\nimport \"./normalize.scss\";\n\nconst onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Provider\n    auctionStore={AuctionStore}\n    authStore={AuthStore}\n    routerHistory={history}\n    overlayStore={OverlayStore}\n  >\n    <Auth0Provider\n      authStore={AuthStore}\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      client_id={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirect_uri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n    >\n      <App />\n    </Auth0Provider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}